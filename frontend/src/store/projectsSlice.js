import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; import api from '../api/api'; export const fetchProjects = createAsyncThunk('projects/fetch', async ()=>{ const res = await api.get('/projects'); return res.data; }); export const createProject = createAsyncThunk('projects/create', async (payload)=>{ const res = await api.post('/projects', payload); return res.data; }); const slice = createSlice({ name:'projects', initialState:{ list:[], loading:false, error:null }, reducers:{}, extraReducers:(b)=>{ b.addCase(fetchProjects.pending,(s)=>{s.loading=true}); b.addCase(fetchProjects.fulfilled,(s,a)=>{s.loading=false; s.list=a.payload}); b.addCase(fetchProjects.rejected,(s,a)=>{s.loading=false; s.error=a.error.message}); b.addCase(createProject.fulfilled,(s,a)=>{s.list.push(a.payload)}); } }); export default slice.reducer;