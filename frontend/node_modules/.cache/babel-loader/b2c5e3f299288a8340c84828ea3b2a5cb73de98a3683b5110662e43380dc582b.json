{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\votpl\\\\Downloads\\\\task_manager_complete\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport ProjectDetail from \"./pages/ProjectDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null); // JWT token\n  const [showRegister, setShowRegister] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const handleLogin = jwtToken => {\n    setToken(jwtToken);\n  };\n  const handleLogout = () => {\n    setToken(null);\n    setShowRegister(false);\n    setSelectedProject(null);\n  };\n  const switchToRegister = () => setShowRegister(true);\n  const switchToLogin = () => setShowRegister(false);\n\n  // If user not logged in, show login/register\n  if (!token) {\n    return showRegister ? /*#__PURE__*/_jsxDEV(Register, {\n      onRegisterSuccess: switchToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onSwitchToRegister: switchToRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If a project is selected, show ProjectDetail page\n  if (selectedProject) {\n    return /*#__PURE__*/_jsxDEV(ProjectDetail, {\n      projectId: selectedProject.id,\n      onBack: () => setSelectedProject(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Default: Dashboard page\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    onLogout: handleLogout,\n    onSelectProject: setSelectedProject\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"d5pQags++HC8nd5z1TEjDiRQrKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Register","Dashboard","ProjectDetail","jsxDEV","_jsxDEV","App","_s","token","setToken","showRegister","setShowRegister","selectedProject","setSelectedProject","handleLogin","jwtToken","handleLogout","switchToRegister","switchToLogin","onRegisterSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSwitchToRegister","projectId","id","onBack","onLogout","onSelectProject","_c","$RefreshReg$"],"sources":["C:/Users/votpl/Downloads/task_manager_complete/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport ProjectDetail from \"./pages/ProjectDetail\";\n\nfunction App() {\n  const [token, setToken] = useState(null); // JWT token\n  const [showRegister, setShowRegister] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  const handleLogin = (jwtToken) => {\n    setToken(jwtToken);\n  };\n\n  const handleLogout = () => {\n    setToken(null);\n    setShowRegister(false);\n    setSelectedProject(null);\n  };\n\n  const switchToRegister = () => setShowRegister(true);\n  const switchToLogin = () => setShowRegister(false);\n\n  // If user not logged in, show login/register\n  if (!token) {\n    return showRegister ? (\n      <Register onRegisterSuccess={switchToLogin} />\n    ) : (\n      <Login onLogin={handleLogin} onSwitchToRegister={switchToRegister} />\n    );\n  }\n\n  // If a project is selected, show ProjectDetail page\n  if (selectedProject) {\n    return (\n      <ProjectDetail\n        projectId={selectedProject.id}\n        onBack={() => setSelectedProject(null)}\n      />\n    );\n  }\n\n  // Default: Dashboard page\n  return <Dashboard onLogout={handleLogout} onSelectProject={setSelectedProject} />;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMe,WAAW,GAAIC,QAAQ,IAAK;IAChCN,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBP,QAAQ,CAAC,IAAI,CAAC;IACdE,eAAe,CAAC,KAAK,CAAC;IACtBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAMN,eAAe,CAAC,IAAI,CAAC;EACpD,MAAMO,aAAa,GAAGA,CAAA,KAAMP,eAAe,CAAC,KAAK,CAAC;;EAElD;EACA,IAAI,CAACH,KAAK,EAAE;IACV,OAAOE,YAAY,gBACjBL,OAAA,CAACJ,QAAQ;MAACkB,iBAAiB,EAAED;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9ClB,OAAA,CAACL,KAAK;MAACwB,OAAO,EAAEV,WAAY;MAACW,kBAAkB,EAAER;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrE;EACH;;EAEA;EACA,IAAIX,eAAe,EAAE;IACnB,oBACEP,OAAA,CAACF,aAAa;MACZuB,SAAS,EAAEd,eAAe,CAACe,EAAG;MAC9BC,MAAM,EAAEA,CAAA,KAAMf,kBAAkB,CAAC,IAAI;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEN;;EAEA;EACA,oBAAOlB,OAAA,CAACH,SAAS;IAAC2B,QAAQ,EAAEb,YAAa;IAACc,eAAe,EAAEjB;EAAmB;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnF;AAAChB,EAAA,CAvCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}