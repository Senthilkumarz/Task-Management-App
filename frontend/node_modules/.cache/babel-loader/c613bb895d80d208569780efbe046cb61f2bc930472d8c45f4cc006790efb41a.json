{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../api/api';\nexport const fetchProjects = createAsyncThunk('projects/fetch', async () => {\n  const res = await api.get('/projects');\n  return res.data;\n});\nexport const createProject = createAsyncThunk('projects/create', async payload => {\n  const res = await api.post('/projects', payload);\n  return res.data;\n});\nconst slice = createSlice({\n  name: 'projects',\n  initialState: {\n    list: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(fetchProjects.pending, s => {\n      s.loading = true;\n    });\n    b.addCase(fetchProjects.fulfilled, (s, a) => {\n      s.loading = false;\n      s.list = a.payload;\n    });\n    b.addCase(fetchProjects.rejected, (s, a) => {\n      s.loading = false;\n      s.error = a.error.message;\n    });\n    b.addCase(createProject.fulfilled, (s, a) => {\n      s.list.push(a.payload);\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchProjects","res","get","data","createProject","payload","post","slice","name","initialState","list","loading","error","reducers","extraReducers","b","addCase","pending","s","fulfilled","a","rejected","message","push","reducer"],"sources":["C:/Users/votpl/Downloads/task_manager_complete/frontend/src/store/projectsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; import api from '../api/api'; export const fetchProjects = createAsyncThunk('projects/fetch', async ()=>{ const res = await api.get('/projects'); return res.data; }); export const createProject = createAsyncThunk('projects/create', async (payload)=>{ const res = await api.post('/projects', payload); return res.data; }); const slice = createSlice({ name:'projects', initialState:{ list:[], loading:false, error:null }, reducers:{}, extraReducers:(b)=>{ b.addCase(fetchProjects.pending,(s)=>{s.loading=true}); b.addCase(fetchProjects.fulfilled,(s,a)=>{s.loading=false; s.list=a.payload}); b.addCase(fetchProjects.rejected,(s,a)=>{s.loading=false; s.error=a.error.message}); b.addCase(createProject.fulfilled,(s,a)=>{s.list.push(a.payload)}); } }); export default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAAE,OAAOC,GAAG,MAAM,YAAY;AAAE,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,gBAAgB,EAAE,YAAU;EAAE,MAAMG,GAAG,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,WAAW,CAAC;EAAE,OAAOD,GAAG,CAACE,IAAI;AAAE,CAAC,CAAC;AAAE,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,iBAAiB,EAAE,MAAOO,OAAO,IAAG;EAAE,MAAMJ,GAAG,GAAG,MAAMF,GAAG,CAACO,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;EAAE,OAAOJ,GAAG,CAACE,IAAI;AAAE,CAAC,CAAC;AAAE,MAAMI,KAAK,GAAGV,WAAW,CAAC;EAAEW,IAAI,EAAC,UAAU;EAAEC,YAAY,EAAC;IAAEC,IAAI,EAAC,EAAE;IAAEC,OAAO,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAK,CAAC;EAAEC,QAAQ,EAAC,CAAC,CAAC;EAAEC,aAAa,EAAEC,CAAC,IAAG;IAAEA,CAAC,CAACC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAEC,CAAC,IAAG;MAACA,CAAC,CAACP,OAAO,GAAC,IAAI;IAAA,CAAC,CAAC;IAAEI,CAAC,CAACC,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAC,CAACD,CAAC,EAACE,CAAC,KAAG;MAACF,CAAC,CAACP,OAAO,GAAC,KAAK;MAAEO,CAAC,CAACR,IAAI,GAACU,CAAC,CAACf,OAAO;IAAA,CAAC,CAAC;IAAEU,CAAC,CAACC,OAAO,CAAChB,aAAa,CAACqB,QAAQ,EAAC,CAACH,CAAC,EAACE,CAAC,KAAG;MAACF,CAAC,CAACP,OAAO,GAAC,KAAK;MAAEO,CAAC,CAACN,KAAK,GAACQ,CAAC,CAACR,KAAK,CAACU,OAAO;IAAA,CAAC,CAAC;IAAEP,CAAC,CAACC,OAAO,CAACZ,aAAa,CAACe,SAAS,EAAC,CAACD,CAAC,EAACE,CAAC,KAAG;MAACF,CAAC,CAACR,IAAI,CAACa,IAAI,CAACH,CAAC,CAACf,OAAO,CAAC;IAAA,CAAC,CAAC;EAAE;AAAE,CAAC,CAAC;AAAE,eAAeE,KAAK,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}